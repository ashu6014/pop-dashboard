{"version":3,"sources":["./src/app/login/login-routing.module.ts","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/login.module.ts"],"names":[],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACc;AAEJ;;;AAEnD,MAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,+DAAc;KAC5B;CACJ,CAAC;AAMK,MAAM,kBAAkB;;iGAAlB,kBAAkB;8JAAlB,kBAAkB,kBAHlB,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAC9B,4DAAY;mIAEb,kBAAkB,uFAFjB,4DAAY;6FAEb,kBAAkB;cAJ9B,sDAAQ;eAAC;gBACN,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;gBACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;aAC1B;;;;;;;;;;;;;;ACfD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAkD;AACT;AACwC;AAC/C;;;;;;;;;;;;ICiBV,4EACE;IAAA,uDACF;IAAA,4DAAY;;;IADV,0DACF;IADE,mGACF;;;IAWA,4EACE;IAAA,uDACF;IAAA,4DAAY;;;IADV,0DACF;IADE,sGACF;;ADvBjB,MAAM,cAAc;IAQvB,YAAoB,MAAc,EAAU,WAAwB;QAAhD,WAAM,GAAN,MAAM,CAAQ;QAAU,gBAAW,GAAX,WAAW,CAAa;QALpE,eAAU,GAAW,wBAAwB,CAAC;QAC9C,SAAI,GAAQ,EAAE,CAAC;QAEf,SAAI,GAAG,IAAI,CAAC;IAE4D,CAAC;IAEzE,QAAQ;QACJ,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,iBAAiB,EAAE,CAAC;IAC7B,CAAC;IAED,UAAU;QACN,IAAI,UAAU,GAAW,wJAAwJ;QACjL,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,OAAO,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,EAAE,IAAI,CAAC,eAAe,CAAC;YAC5F,MAAM,EAAE,CAAC,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACnC,UAAU,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACzC,aAAa,EAAE,CAAC,IAAI,EAAE,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,yDAAU,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC/F,UAAU,EAAE,EAAE;SACf,CAAC,CAAC;IACL,CAAC;IAED,iBAAiB;QACf,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,YAAY,CAAC,SAAS,CACnD,CAAC,QAAQ,EAAE,EAAE;YACX,IAAI,QAAQ,IAAI,GAAG,EAAE;gBACnB,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,aAAa,CAAC,CAAC,yDAAU,CAAC,QAAQ,EAAE,yDAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBACzF,IAAI,CAAC,UAAU,GAAG,2CAA2C,CAAC;aAC/D;QACH,CAAC,CACF;IACH,CAAC;IAEF,aAAa;QACV,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,mBAAmB,CAAC,CAAC;YAC7E,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,0BAA0B,CAAC,CAAC;gBAC5E,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,0CAA0C,CAAC,CAAC,CAAC,EAAE,CAAC;IAC7G,CAAC;IAED,gBAAgB;QACd,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,oFAAoF,CAAC,CAAC;YACjJ,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC,qFAAqF,CAAC,CAAC,CAAC,EAAE,CAAC;IACzJ,CAAC;IAED,QAAQ,CAAC,IAAI;QACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACnB,CAAC;IAED,eAAe,CAAC,OAAO;QACrB,6BAA6B;QAC7B,IAAI,EAAE,GAAG,CAAC,6BAA6B,EAAE,oBAAoB,EAAE,8BAA8B;YAC/F,iBAAiB,EAAE,sBAAsB,EAAE,oBAAoB,EAAE,uBAAuB;YACxF,wBAAwB,CAAC,CAAC;QACxB,OAAO,IAAI,+CAAU,CAAC,QAAQ,CAAC,EAAE;YAC/B,UAAU,CAAC,GAAG,EAAE;gBACd,OAAO,CAAC,GAAG,CAAC,SAAS,EAAC,OAAO,CAAC;gBAC9B,IAAI,MAAM,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,cAAc,EAAE,IAAI,EAAE,CAAC;gBAClF,QAAQ,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;gBACtB,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACtB,CAAC,EAAE,IAAI,CAAC;QACV,CAAC,CAAC;IAEJ,CAAC;IACD,OAAO;QACL,IAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,IAAI,OAAO,EAAC;YAC/C,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,MAAM,CAAC,CAAC;YAC3C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;SACtC;aACG;YACA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;SACpC;IACL,CAAC;;4EA3EQ,cAAc;8FAAd,cAAc;QCZ3B,yEACI;QAAA,yEAEI;QAAA,0EAAwF;QAA1D,0IAAY,iCAAyB,IAAC;QAAoB,sEACpF;QAAA,oEACA;QAAA,yEACI;QAAA,oEAAG;QAAA,wFAA6B;QAAA,4DAAI;QACpC,oEAAG;QAAA,oIAAyE;QAAA,4DAAI;QACpF,4DAAM;QAER,4DAAM;QACN,0EAA2B;QAEzB,0EACI;QAAA,wEAAmE;QAAA,yEAAa;QAAA,4DAAI;QACxF,4DAAM;QACN,0EACI;QAAA,0EACI;QAAA,qFACI;QAAA,wEACA;QAAA,yHACE;QAEJ,4DAAiB;QACvB,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,0EACI;QAAA,qFACI;QAAA,wEACA;QAAA,8EACI;QAD8B,+JAAsB;QACpD,4EAAU;QAAA,wDAA0C;QAAA,4DAAW;QACnE,4DAAS;QACT,yHACE;QAEJ,4DAAiB;QACvB,4DAAM;QACV,4DAAM;QACN,2EACI;QAAA,0EACI;QAAA,8EAA6E;QAApB,uIAAS,aAAS,IAAC;QAAC,iEAAK;QAAA,4DAAS;QAC/F,4DAAM;QACV,4DAAM;QACV,4DAAO;QACX,4DAAM;QAGV,4DAAM;;QA7CQ,0DAAuB;QAAvB,oFAAuB;QAiBF,2DAAiF;QAAjF,mJAAiF;QAS3D,0DAAmC;QAAnC,gGAAmC;QACX,0DAAmC;QAAnC,wFAAmC;QAC9E,0DAA0C;QAA1C,2GAA0C;QAE7C,0DAAuF;QAAvF,yJAAuF;;6FDrB7G,cAAc;cAL1B,uDAAS;eAAC;gBACP,QAAQ,EAAE,WAAW;gBACrB,WAAW,EAAE,wBAAwB;gBACrC,SAAS,EAAE,CAAC,wBAAwB,CAAC;aACxC;;;;;;;;;;;;;;AEXD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyC;AACM;AACS;AACH;AACR;AAEe;AACT;AACyB;;;AAarE,MAAM,WAAW;;0FAAX,WAAW;gJAAX,WAAW,kBAVX;YACL,4DAAY;YACZ,wEAAkB;YAClB,kEAAmB;YACnB,uFAAc;YACd,0DAAW;YACX,qEAAgB,CAAC,UAAU,CAAC,EAAE,eAAe,EAAE,KAAK,EAAE,CAAC;SAC1D;mIAGQ,WAAW,mBAFL,+DAAc,aAPzB,4DAAY;QACZ,wEAAkB;QAClB,kEAAmB;QACnB,uFAAc;QACd,0DAAW;6FAKN,WAAW;cAXvB,sDAAQ;eAAC;gBACN,OAAO,EAAE;oBACL,4DAAY;oBACZ,wEAAkB;oBAClB,kEAAmB;oBACnB,uFAAc;oBACd,0DAAW;oBACX,qEAAgB,CAAC,UAAU,CAAC,EAAE,eAAe,EAAE,KAAK,EAAE,CAAC;iBAC1D;gBACD,YAAY,EAAE,CAAC,+DAAc,CAAC;aACjC","file":"login-login-module.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { LoginComponent } from './login.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: LoginComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class LoginRoutingModule {}\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, FormControl, Validators } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { MatTabsModule } from '@angular/material/tabs';\n\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n    formGroup: FormGroup;\n    titleAlert: string = 'This field is required';\n    post: any = '';\n    accessEmailList: any[];\n    hide = true;\n\n    constructor(private router: Router, private formBuilder: FormBuilder) { }\n\n    ngOnInit() { \n        this.createForm();\n        this.setChangeValidate();\n    }\n\n    createForm() {\n        let emailregex: RegExp = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/\n        this.formGroup = this.formBuilder.group({\n          'email': [null, [Validators.required, Validators.pattern(emailregex)], this.checkUserAccess],\n          'name': [null, Validators.required],\n          'password': [null, [Validators.required]],\n          'description': [null, [Validators.required, Validators.minLength(5), Validators.maxLength(10)]],\n          'validate': ''\n        });\n      }\n\n      setChangeValidate() {\n        this.formGroup.get('validate').valueChanges.subscribe(\n          (validate) => {\n            if (validate == '1') {\n              this.formGroup.get('name').setValidators([Validators.required, Validators.minLength(3)]);\n              this.titleAlert = \"You need to specify at least 3 characters\";\n            } \n          }\n        )\n      }\n\n     getErrorEmail() {\n        return this.formGroup.get('email').hasError('required') ? 'Field is required' :\n          this.formGroup.get('email').hasError('pattern') ? 'Not a valid emailaddress' :\n            this.formGroup.get('email').hasError('alreadyInUse') ? 'You do not have access to this dashboard' : '';\n      }\n    \n      getErrorPassword() {\n        return this.formGroup.get('password').hasError('required') ? 'Field is required (at least eight characters, one uppercase letter and one number)' :\n          this.formGroup.get('password').hasError('requirements') ? 'Password needs to be at least eight characters, one uppercase letter and one number' : '';\n      }\n    \n      onSubmit(post) {\n        this.post = post;\n      }\n\n      checkUserAccess(control) {\n        // mimic http database access\n        let db = ['aishwaryateegulla4@tamu.edu', 'cguerrero@tamu.edu', 'sunil_krishna_kumar@tamu.edu',\n      'a-lara@tamu.edu', 'kara.sutton@tamu.edu', 'fuhuitong@tamu.edu', 'beverly.irby@tamu.edu', \n      'shifangtang03@tamu.edu'];\n        return new Observable(observer => {\n          setTimeout(() => {\n            console.log(\"control\",control)\n            let result = (db.indexOf(control.value) !== -1) ? null : { 'alreadyInUse': true };\n            observer.next(result);\n            observer.complete();\n          }, 1200)\n        })\n        \n      }\n      onLogin() {\n        if(this.formGroup.get('email').status == 'VALID'){\n          localStorage.setItem('isLoggedin', 'true');\n          this.router.navigate(['/dashboard']);\n        }\n        else{\n            this.router.navigate(['/login']);\n        }\n    }\n}\n","<div class=\"login-page\">\n    <div class=\"content\">\n        \n        <form [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit(formGroup.value)\" class=\"login-form\"><div >\n            <img  src=\"assets/images/TAM-LogoBox.png\" width=\"100\" height=\"100\" class=\"anmLogo\">\n            <div class=\"deptInfo\">\n                <p>Education & Human Development</p>\n                <p>Centre for Research & Development in Dual Language & Literacy Acquisition</p>  \n            </div>\n           \n          </div>\n          <mat-divider></mat-divider>\n\n            <div class=\"text-center\" style=\"padding-top: 20px;;\">\n                <p  style=\"font-size: 24px; font-weight: 600;\"    class=\"app-name\">POP DASHBOARD</p>\n            </div>\n            <div fxFlex  fxlayout=\"row\" fxlayout.lt-md=\"column\" class=\"loginFormField\">\n                <div fxFlexFill>\n                    <mat-form-field class=\"w-100\" appearance = \"outline\">\n                        <input  matInput placeholder=\"Email\" formControlName=\"email\">\n                        <mat-error *ngIf=\"!formGroup.controls['email'].valid && formGroup.controls['email'].touched\">\n                          {{ getErrorEmail() }}\n                        </mat-error>\n                      </mat-form-field>\n                </div>\n            </div>\n            <div fxFlex  fxLayout=\"row\" fxLayout.lt-md=\"column\" class=\"loginFormField\">\n                <div fxFlexFill>\n                    <mat-form-field class=\"w-100\" appearance = \"outline\">\n                        <input type= \"password\" matInput [type]=\"hide ? 'password' : 'text'\" placeholder=\"Password\" formControlName=\"password\">\n                        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                            <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                        </button>\n                        <mat-error *ngIf=\"!formGroup.controls['password'].valid && formGroup.controls['password'].touched\">\n                          {{ getErrorPassword() }}\n                        </mat-error>\n                      </mat-form-field>\n                </div>\n            </div>\n            <div fxFlex  fxLayout=\"row\" fxLayout.lt-md=\"column\">\n                <div fxFlexFill>\n                    <button mat-raised-button id=\"loginButton\" class=\"w-100\" (click)=\"onLogin()\">Login</button>\n                </div>\n            </div>       \n        </form>\n    </div>\n\n    \n</div>\n\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginComponent } from './login.component';\nimport { MaterialModule } from '../shared/modules/material/material.module';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        LoginRoutingModule,\n        ReactiveFormsModule,\n        MaterialModule,\n        FormsModule,\n        FlexLayoutModule.withConfig({ addFlexToParent: false })\n    ],\n    declarations: [LoginComponent]\n})\nexport class LoginModule { }\n"],"sourceRoot":"webpack:///"}